---
const projects = [
  
  {
    title: "Patient Management System",
    description:
      "A sophisticated microservices-based healthcare platform built with Spring Boot, React, and Kafka for real-time data synchronization. The system implements a robust architecture with dedicated services for patient management, billing, authentication, and notifications, all communicating through gRPC and Kafka event streaming. Features include JWT-based authentication, PostgreSQL persistence with JPA/Hibernate, and containerized deployment with Docker.",
    techStack: [
      { name: "Spring Boot", icon: "/svg/spring.svg" },
      { name: "PostgreSQL", icon: "/svg/postgreSQL.svg" },
      { name: "Kafka", icon: "/svg/kafka.png" },
    ],
    link: "https://github.com/chouket0102/patient-management",
    preview: "#",
    status: "Completed",
  },
  {
    title:"Fraud Detection System",
    description:"A sophisticated real-time fraud detection system that leverages MongoDB Atlas Vector Search, Apache Kafka, and AI-generated embeddings to identify suspicious financial transactions in real-time. The system analyzes user transaction patterns and detects anomalies using AI embeddings and vector similarity search.",
    techStack: [
      { name: "Spring Boot", icon: "/svg/spring.svg" },
      { name: "MongoDB Atlas", icon: "/svg/mongodb.svg" },
      { name: "Kafka", icon: "/svg/kafka.png" },
    ],
    link: "https://github.com/chouket0102/Fraud-Detection-System",
    preview: "#",
    status: "Completed",
  },
  {
    title:"Medical Voice Assistant",
    description:" An AI-powered medical consultation assistant that combines voice recognition, natural language processing, and retrieval-augmented generation (RAG) to provide accurate medical information through an intuitive voice interface.",
    techStack: [
      { name: "Fast API", icon: "/svg/fastapi.svg" },
      { name: "Pinecone DB", icon: "/svg/pinecone.png" },
      { name: "langchain", icon: "/svg/langchain.png" },
    ],
    link: "https://github.com/chouket0102/Medical-Assistant",
    preview: "#",
    status: "Completed",
  },
  {
    title: "Virtual Interviewer",
    description:
      "An AI-powered interview preparation platform that provides personalized coaching and feedback for job seekers. Features real-time interview simulations with instant analysis of responses and industry-specific question preparation.",
    techStack: [
      { name: "Next.js", icon: "/svg/next.svg" },
      { name: "FireBase", icon: "/svg/firebase.svg" },
      { name: "Gemini AI", icon: "/svg/gemini.svg" },
    ],
    link: "https://github.com/chouket0102/virtual-interview",
    preview: "#",
    status: "Completed",
  },

  {
    title: "AI Email Reply Extension",
    description:
      "A productivity-enhancing Chrome extension that transforms email communication through AI-powered response suggestions. The tool analyzes incoming emails for context and intent, then generates appropriate reply options based on previous communication patterns and best practices. Integration with Gemini API enables natural language processing for human-like responses, helping users manage their inbox more efficiently.",
    techStack: [
      { name: "Spring Boot", icon: "/svg/spring.svg" },
      { name: "JavaScript", icon: "/svg/javaScript.svg" },
      { name: "Gemini AI", icon: "/svg/gemini.svg" },
      {name:"",icon:"/svg/extension.svg"}
    ],
    link: "https://github.com/chouket0102",
    preview: "#",
    status: "On Development",
  },
  {
    title: "Banking DataWarehouse",
    description:
      "This project implements a comprehensive data warehouse for a banking environment using a modern medallion architecture approach.",
    techStack: [
      { name: "PySpark", icon: "/svg/spark.svg" },
      { name: "Azure", icon: "/svg/azure.svg" },
      
    ],
    link: "https://github.com/chouket0102/Banking-Data-Warehouse",
    preview: "#",
    status: "Completed",
  },
];
---

<section
  id="projects"
  class="py-12 border-t border-[#ffffff10] text-[var(--white)]"
>
  <div class="max-w-5xl mx-auto px-4">
    <h2 class="text-lg text-[var(--sec)] mb-2 shiny-sec">My work</h2>
    <h3 class="text-4xl md:text-5xl font-medium mb-8">Projects</h3>

    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      {
        projects.map((project) => (
          <div class="group bg-[#1414149c] border border-[#ffffff15] rounded-2xl overflow-hidden shadow-lg hover:shadow-xl transition-all duration-300 hover:border-[#ffffff30] hover:shadow-[0_0_15px_rgba(255,255,255,0.1)]">
            <div class="block p-6">
              {/* Tech Stack Icons */}
              <div class="flex flex-wrap gap-4 justify-center mb-6">
                {project.techStack.map((tech) => (
                  <div class="flex flex-col items-center">
                    <div class="w-14 h-14 flex items-center justify-center rounded-full bg-[#ffffff08] border border-[#ffffff15] mb-2 group-hover:bg-[#ffffff12] transition-all duration-300">
                      <img src={tech.icon || "/placeholder.svg"} alt={tech.name} class="w-8 h-8 text-[var(--sec)]" />
                    </div>
                    <span class="text-xs text-[var(--white-icon)]">{tech.name}</span>
                  </div>
                ))}
              </div>

              {/* Project Title and Status */}
              <div class="mb-4">
                <div class="flex items-center justify-between mb-2">
                  <h4 class="text-2xl font-semibold">{project.title}</h4>
                  <span class="py-1 px-3 text-xs rounded-full bg-[#ffffff10] text-[var(--sec)]">
                    {project.status}
                  </span>
                </div>
                <div class="w-16 h-1 bg-[var(--sec)] rounded-full mb-4 group-hover:w-24 transition-all duration-300"></div>
              </div>

              {/* Project Description */}
              <div class="relative">
                <p class="text-sm text-[var(--white-icon)] mb-2 description-text line-clamp-4">
                  {project.description}
                </p>
                <button 
                  class="text-xs text-[var(--sec)] hover:text-[var(--white)] font-medium mb-4 read-more-toggle flex items-center gap-1 transition-colors duration-300"
                  aria-label="Toggle description"
                >
                  <span class="read-more-text">Read more</span>
                  <svg xmlns="http://www.w3.org/2000/svg" class="w-3 h-3 read-more-icon transition-transform duration-300" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M12 15.0006L7.75732 10.758L9.17154 9.34375L12 12.1722L14.8284 9.34375L16.2426 10.758L12 15.0006Z"/>
                  </svg>
                </button>
              </div>

              {/* Action Buttons - IMPROVED POSITIONING */}
              <div class="grid  gap-3 mt-auto">
                <a
                  target="_blank"
                  href={project.link}
                  aria-label="GitHub"
                  class="flex justify-center items-center gap-2 text-[var(--white-icon)] hover:text-white transition duration-300 ease-in-out border border-[var(--white-icon-tr)] py-2.5 rounded-lg bg-[#14141480] hover:bg-[#ffffff15] hover:shadow-md"
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 24 24"
                    fill="currentColor"
                    class="w-5 h-5"
                  >
                    <path d="M12.001 2C6.47598 2 2.00098 6.475 2.00098 12C2.00098 16.425 4.86348 20.1625 8.83848 21.4875C9.33848 21.575 9.52598 21.275 9.52598 21.0125C9.52598 20.775 9.51348 19.9875 9.51348 19.15C7.00098 19.6125 6.35098 18.5375 6.15098 17.975C6.03848 17.6875 5.55098 16.8 5.12598 16.5625C4.77598 16.375 4.27598 15.9125 5.11348 15.9C5.90098 15.8875 6.46348 16.625 6.65098 16.925C7.55098 18.4375 8.98848 18.0125 9.56348 17.75C9.65098 17.1 9.91348 16.6625 10.201 16.4125C7.97598 16.1625 5.65098 15.3 5.65098 11.475C5.65098 10.3875 6.03848 9.4875 6.67598 8.7875C6.57598 8.5375 6.22598 7.5125 6.77598 6.1375C6.77598 6.1375 7.61348 5.875 9.52598 7.1625C10.326 6.9375 11.176 6.825 12.026 6.825C12.876 6.825 13.726 6.9375 14.526 7.1625C16.4385 5.8625 17.276 6.1375 17.276 6.1375C17.826 7.5125 17.476 8.5375 17.376 8.7875C18.0135 9.4875 18.401 10.375 18.401 11.475C18.401 15.3125 16.0635 16.1625 13.8385 16.4125C14.201 16.725 14.5135 17.325 14.5135 18.2625C14.5135 19.6 14.501 20.675 14.501 21.0125C14.501 21.275 14.6885 21.5875 15.1885 21.4875C19.259 20.1133 21.9999 16.2963 22.001 12C22.001 6.475 17.526 2 12.001 2Z"></path>
                  </svg>
                  <span class="font-medium">Code</span>
                </a>
                
              </div>
            </div>
          </div>
        ))
      }
    </div>

    <a
      target="_blank"
      href="https://github.com/Gothsec?tab=repositories"
      aria-label="GitHub"
      class="w-full flex items-center justify-center gap-2 mt-12 text-[var(--white-icon)] hover:text-white transition duration-300 ease-in-out border border-[var(--white-icon-tr)] p-4 rounded-full bg-[#1414149c] hover:bg-[var(--white-icon-tr)]"
    >
      <span class="md:text-lg text-md">More projects on</span>
      <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 24 24"
        fill="currentColor"
        class="size-6"
      >
        <path
          d="M12.001 2C6.47598 2 2.00098 6.475 2.00098 12C2.00098 16.425 4.86348 20.1625 8.83848 21.4875C9.33848 21.575 9.52598 21.275 9.52598 21.0125C9.52598 20.775 9.51348 19.9875 9.51348 19.15C7.00098 19.6125 6.35098 18.5375 6.15098 17.975C6.03848 17.6875 5.55098 16.8 5.12598 16.5625C4.77598 16.375 4.27598 15.9125 5.11348 15.9C5.90098 15.8875 6.46348 16.625 6.65098 16.925C7.55098 18.4375 8.98848 18.0125 9.56348 17.75C9.65098 17.1 9.91348 16.6625 10.201 16.4125C7.97598 16.1625 5.65098 15.3 5.65098 11.475C5.65098 10.3875 6.03848 9.4875 6.67598 8.7875C6.57598 8.5375 6.22598 7.5125 6.77598 6.1375C6.77598 6.1375 7.61348 5.875 9.52598 7.1625C10.326 6.9375 11.176 6.825 12.026 6.825C12.876 6.825 13.726 6.9375 14.526 7.1625C16.4385 5.8625 17.276 6.1375 17.276 6.1375C17.826 7.5125 17.476 8.5375 17.376 8.7875C18.0135 9.4875 18.401 10.375 18.401 11.475C18.401 15.3125 16.0635 16.1625 13.8385 16.4125C14.201 16.725 14.5135 17.325 14.5135 18.2625C14.5135 19.6 14.501 20.675 14.501 21.0125C14.501 21.275 14.6885 21.5875 15.1885 21.4875C19.259 20.1133 21.9999 16.2963 22.001 12C22.001 6.475 17.526 2 12.001 2Z"
        ></path>
      </svg>
    </a>
  </div>

  <style>
    /* Optional: Add these styles if you want the shiny effect for section titles */
    .shiny-sec {
      position: relative;
      display: inline-block;
      background: linear-gradient(
        90deg,
        var(--sec) 0%,
        #ffffff 50%,
        var(--sec) 100%
      );
      background-size: 200% auto;
      background-clip: text;
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      animation: shine 3s linear infinite;
    }

    @keyframes shine {
      to {
        background-position: 200% center;
      }
    }

    /* Hover effect for tech stack icons */
    .group:hover .text-[var(--sec)] {
      filter: drop-shadow(0 0 3px var(--sec));
    }
    
    /* Read more toggle button styles */
    .description-text.expanded {
      display: block;
      line-clamp: none;
      -webkit-line-clamp: none;
    }
    
    .read-more-icon.expanded {
      transform: rotate(180deg);
    }
  </style>

  <script>
    // Initialize read more functionality
    document.addEventListener('DOMContentLoaded', () => {
      const readMoreToggles = document.querySelectorAll('.read-more-toggle');
      
      readMoreToggles.forEach(toggle => {
        toggle.addEventListener('click', (e) => {
          const button = e.currentTarget as HTMLButtonElement;
          const descriptionText = button.parentElement?.querySelector('.description-text');
          const icon = button.querySelector('.read-more-icon');
          const textSpan = button.querySelector('.read-more-text');
          
          if (!descriptionText || !icon || !textSpan) return;
          
          // Toggle expanded state
          const isExpanded = descriptionText.classList.toggle('expanded');
          
          // Toggle classes for icon rotation
          icon.classList.toggle('expanded');
          
          // Update button text
          textSpan.textContent = isExpanded ? 'Read less' : 'Read more';
          
          // Toggle line-clamp class
          if (isExpanded) {
            descriptionText.classList.remove('line-clamp-4');
          } else {
            descriptionText.classList.add('line-clamp-4');
          }
        });
      });
    });
  </script>
</section>